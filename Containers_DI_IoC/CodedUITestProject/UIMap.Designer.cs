// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestToggleCommand - Use 'TestToggleCommandParams' to pass parameters into this method.
        /// </summary>
        public void TestToggleCommand()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIDIWPFOneexeListItem.UINameEdit;
            WinPane uIItem1TestAutomationwPane = this.UIItem1TestAutomationwWindow.UIItem1TestAutomationwWindow1.UIItem1TestAutomationwPane;
            WpfToggleButton uIToggleViewModelToggleButton = this.UIDIWPFOneWindow.UIUserControlToggleCustom.UIToggleViewModelToggleButton;
            WpfCell uIEnglandCell = this.UIDIWPFOneWindow.UIItemTable.UIItemDataItem.UIEnglandCell;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(71, 11));

            // Click '(1) Test Automation with Microsoft Visual Studio 2...' pane
            Mouse.Click(uIItem1TestAutomationwPane, new Point(465, 862));

            // Set to 'Pressed' state 'Toggle ViewModel' toggle button
            uIToggleViewModelToggleButton.Pressed = this.TestToggleCommandParams.UIToggleViewModelToggleButtonPressed;

            // Click 'England' cell
            Mouse.Click(uIEnglandCell, new Point(11, 5));

            // Set to 'Normal' state 'Toggle ViewModel' toggle button
            uIToggleViewModelToggleButton.Pressed = this.TestToggleCommandParams.UIToggleViewModelToggleButtonPressed1;
        }
        
        #region Properties
        public virtual TestToggleCommandParams TestToggleCommandParams
        {
            get
            {
                if ((this.mTestToggleCommandParams == null))
                {
                    this.mTestToggleCommandParams = new TestToggleCommandParams();
                }
                return this.mTestToggleCommandParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIItem1TestAutomationwWindow UIItem1TestAutomationwWindow
        {
            get
            {
                if ((this.mUIItem1TestAutomationwWindow == null))
                {
                    this.mUIItem1TestAutomationwWindow = new UIItem1TestAutomationwWindow();
                }
                return this.mUIItem1TestAutomationwWindow;
            }
        }
        
        public UIDIWPFOneWindow UIDIWPFOneWindow
        {
            get
            {
                if ((this.mUIDIWPFOneWindow == null))
                {
                    this.mUIDIWPFOneWindow = new UIDIWPFOneWindow();
                }
                return this.mUIDIWPFOneWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestToggleCommandParams mTestToggleCommandParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIItem1TestAutomationwWindow mUIItem1TestAutomationwWindow;
        
        private UIDIWPFOneWindow mUIDIWPFOneWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestToggleCommand'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestToggleCommandParams
    {
        
        #region Fields
        /// <summary>
        /// Set to 'Pressed' state 'Toggle ViewModel' toggle button
        /// </summary>
        public bool UIToggleViewModelToggleButtonPressed = true;
        
        /// <summary>
        /// Set to 'Normal' state 'Toggle ViewModel' toggle button
        /// </summary>
        public bool UIToggleViewModelToggleButtonPressed1 = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIDIWPFOneexeListItem UIDIWPFOneexeListItem
        {
            get
            {
                if ((this.mUIDIWPFOneexeListItem == null))
                {
                    this.mUIDIWPFOneexeListItem = new UIDIWPFOneexeListItem(this);
                }
                return this.mUIDIWPFOneexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDIWPFOneexeListItem mUIDIWPFOneexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDIWPFOneexeListItem : WinListItem
    {
        
        public UIDIWPFOneexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DI.WPF.One.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem1TestAutomationwWindow : WinWindow
    {
        
        public UIItem1TestAutomationwWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                "gement - YouTube - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                    "gement - YouTube - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItem1TestAutomationwWindow1 UIItem1TestAutomationwWindow1
        {
            get
            {
                if ((this.mUIItem1TestAutomationwWindow1 == null))
                {
                    this.mUIItem1TestAutomationwWindow1 = new UIItem1TestAutomationwWindow1(this);
                }
                return this.mUIItem1TestAutomationwWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1TestAutomationwWindow1 mUIItem1TestAutomationwWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem1TestAutomationwWindow1 : WinWindow
    {
        
        public UIItem1TestAutomationwWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                "gement - YouTube - Google Chrome";
            this.WindowTitles.Add("(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                    "gement - YouTube - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UIItem1TestAutomationwPane
        {
            get
            {
                if ((this.mUIItem1TestAutomationwPane == null))
                {
                    this.mUIItem1TestAutomationwPane = new WinPane(this);
                    #region Search Criteria
                    this.mUIItem1TestAutomationwPane.SearchProperties[WinControl.PropertyNames.Name] = "(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                        "gement - YouTube - Google Chrome";
                    this.mUIItem1TestAutomationwPane.WindowTitles.Add("(1) Test Automation with Microsoft Visual Studio 2010 - Coded UI Tests & Lab Mana" +
                            "gement - YouTube - Google Chrome");
                    #endregion
                }
                return this.mUIItem1TestAutomationwPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIItem1TestAutomationwPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDIWPFOneWindow : WpfWindow
    {
        
        public UIDIWPFOneWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "DI WPF One";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("DI WPF One");
            #endregion
        }
        
        #region Properties
        public UIUserControlToggleCustom UIUserControlToggleCustom
        {
            get
            {
                if ((this.mUIUserControlToggleCustom == null))
                {
                    this.mUIUserControlToggleCustom = new UIUserControlToggleCustom(this);
                }
                return this.mUIUserControlToggleCustom;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIUserControlToggleCustom mUIUserControlToggleCustom;
        
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIUserControlToggleCustom : WpfCustom
    {
        
        public UIUserControlToggleCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ToggleViewModel";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControlToggle";
            this.WindowTitles.Add("DI WPF One");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton UIToggleViewModelToggleButton
        {
            get
            {
                if ((this.mUIToggleViewModelToggleButton == null))
                {
                    this.mUIToggleViewModelToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIToggleViewModelToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "toggleViewModel";
                    this.mUIToggleViewModelToggleButton.WindowTitles.Add("DI WPF One");
                    #endregion
                }
                return this.mUIToggleViewModelToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mUIToggleViewModelToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemTable : WpfTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("DI WPF One");
            #endregion
        }
        
        #region Properties
        public UIItemDataItem UIItemDataItem
        {
            get
            {
                if ((this.mUIItemDataItem == null))
                {
                    this.mUIItemDataItem = new UIItemDataItem(this);
                }
                return this.mUIItemDataItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItemDataItem mUIItemDataItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemDataItem : WpfControl
    {
        
        public UIItemDataItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("DI WPF One");
            #endregion
        }
        
        #region Properties
        public WpfCell UIEnglandCell
        {
            get
            {
                if ((this.mUIEnglandCell == null))
                {
                    this.mUIEnglandCell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIEnglandCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Customer Address";
                    this.mUIEnglandCell.WindowTitles.Add("DI WPF One");
                    #endregion
                }
                return this.mUIEnglandCell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIEnglandCell;
        #endregion
    }
}
